{"version":3,"sources":["YoutubeEmbed.js","Slots.js","index.js"],"names":["YoutubeEmbed","embedId","className","width","height","src","frameBorder","allow","allowFullScreen","title","Slots","props","roll","a","shuffle","setState","rolling","setTimeout","slotRef","forEach","slot","i","triggerSlotRotation","current","state","vid1","vid2","vid3","title1","title2","title3","shuffleIndex","createRef","this","playlist","shuffledList","snippet","resourceId","videoId","ref","id","onClick","disabled","split","Component","App","shuffleList","connected","loading","firstloaded","npt","j","pagesAvailable","fetch","response","json","data","console","log","nextPageToken","undefined","items","map","video","push","l","Array","from","length","keys","sort","Math","random","x","event","target","value","getPlaylist","style","display","margin","visibility","type","color","name","onChange","handleChange","bind","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3bc2f5c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst YoutubeEmbed = ({ embedId }) => (\r\n  <div className=\"video-responsive\">\r\n    <iframe\r\n      width=\"300\"\r\n      height=\"200\"\r\n      src={`https://www.youtube.com/embed/${embedId}`}\r\n      frameBorder=\"0\"\r\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n      allowFullScreen\r\n      title=\"Embedded youtube\"\r\n    />\r\n  </div>\r\n);\r\n\r\nYoutubeEmbed.propTypes = {\r\n  embedId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default YoutubeEmbed;\r\n","import { createRef, Component } from \"react\";\r\nimport YoutubeEmbed from \"./YoutubeEmbed\";\r\nimport \"./styles.css\";\r\n\r\nexport default class Slots extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rolling: false,\r\n      vid1: \"\",\r\n      vid2: \"\",\r\n      vid3: \"\",\r\n      title1: \" - \",\r\n      title2: \" - \",\r\n      title3: \" - \"\r\n    };\r\n\r\n    this.shuffleIndex = -1;\r\n\r\n    // get ref of dic onn which elements will roll\r\n    this.slotRef = [createRef(), createRef(), createRef()];\r\n  }\r\n  async shuffle() {\r\n    this.shuffleIndex++;\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        vid1: this.props.playlist[\r\n          this.props.shuffledList[3 * this.shuffleIndex]\r\n        ].snippet.resourceId.videoId,\r\n        title1: this.props.playlist[\r\n          this.props.shuffledList[3 * this.shuffleIndex]\r\n        ].snippet.title\r\n      });\r\n    }, 2000);\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        vid2: this.props.playlist[\r\n          this.props.shuffledList[3 * this.shuffleIndex + 1]\r\n        ].snippet.resourceId.videoId,\r\n        title2: this.props.playlist[\r\n          this.props.shuffledList[3 * this.shuffleIndex + 1]\r\n        ].snippet.title\r\n      });\r\n    }, 4000);\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        vid3: this.props.playlist[\r\n          this.props.shuffledList[3 * this.shuffleIndex + 2]\r\n        ].snippet.resourceId.videoId,\r\n        title3: this.props.playlist[\r\n          this.props.shuffledList[3 * this.shuffleIndex + 2]\r\n        ].snippet.title\r\n      });\r\n    }, 6000);\r\n  }\r\n  // to trigger roolling and maintain state\r\n  roll = async () => {\r\n    this.shuffle();\r\n    this.setState({\r\n      rolling: true\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ rolling: false });\r\n    }, 7000);\r\n\r\n    // looping through all 3 slots to start rolling\r\n    this.slotRef.forEach((slot, i) => {\r\n      // this will trigger rolling effect\r\n      this.triggerSlotRotation(slot.current, i);\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.slotRef.forEach((slot, i) => {\r\n        // this will trigger rolling effect\r\n        this.triggerSlotRotation(slot.current, i + 4);\r\n      });\r\n    }, 6000);\r\n  };\r\n\r\n  // this will create a rolling effect and return random selected option\r\n  async triggerSlotRotation(ref, i) {\r\n    ref.id = \"slot\" + i;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SlotMachine\">\r\n        <div\r\n          className={!this.state.rolling ? \"roll rolling\" : \"roll\"}\r\n          onClick={!this.state.rolling && this.roll}\r\n          disabled={this.state.rolling}\r\n          id=\"shuffleBtn\"\r\n        >\r\n          {this.state.rolling ? \"SHUFFLING...\" : \"SHUFFLE\"}\r\n        </div>\r\n        <div className=\"slot\">\r\n          <section>\r\n            <div className=\"container\" ref={this.slotRef[0]}>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed embedId={this.state.vid1} />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <h2>\r\n            {this.state.title1.split(\"-\")[0] +\r\n              \"\\n\" +\r\n              this.state.title1.split(\"-\")[1]}\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\"slot\">\r\n          <section>\r\n            <div className=\"container\" ref={this.slotRef[1]}>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed embedId={this.state.vid2} />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <h2>\r\n            {this.state.title2.split(\"-\")[0] +\r\n              \"\\n\" +\r\n              this.state.title2.split(\"-\")[1]}\r\n          </h2>\r\n        </div>\r\n        <div className=\"slot\">\r\n          <section>\r\n            <div className=\"container\" ref={this.slotRef[2]}>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed embedId={this.state.vid3} />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  <YoutubeEmbed />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <h2>\r\n            {this.state.title3.split(\"-\")[0] +\r\n              \"\\n\" +\r\n              this.state.title3.split(\"-\")[1]}\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactLoading from \"react-loading\";\nimport YoutubeEmbed from \"./YoutubeEmbed\";\nimport Slots from \"./Slots\";\nimport \"./styles.css\";\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playlist: [],\n      shuffleList: [],\n      connected: \"Not Connected\",\n      loading: false,\n      firstloaded: \"block\"\n    };\n    this.playlist = [];\n    this.shuffledList = [];\n    this.shuffleIndex = -1;\n  }\n  async getPlaylist() {\n    this.setState({\n      loading: true\n    });\n    // Simple GET request using fetch\n    var npt = \"\";\n    var j = \"\";\n    var pagesAvailable = true;\n    var i = 0;\n    while (pagesAvailable) {\n      const response = await fetch(\n        \"https://youtube.googleapis.com/youtube/v3/playlistItems?\" +\n          npt +\n          \"part=snippet%2CcontentDetails&maxResults=50&playlistId=PL6BUeaiW2UeIBWvEgYHSoECUyC-Qm1bKA&key=AIzaSyCo53bQZ8CNuzgai3-ZB83eh09548lszB8\"\n      );\n      const data = await response.json();\n      console.log(\"JSON response: \");\n      console.log(data);\n      console.log(\"Page Token: \" + data.nextPageToken);\n      j = data.nextPageToken;\n      npt = \"pageToken=\" + j + \"&\";\n      if (data.items !== undefined) {\n        data.items.map((video) => this.playlist.push(video));\n      }\n      if (j === undefined) {\n        pagesAvailable = false;\n      }\n      i++;\n    }\n    console.log(\"API Calls: \" + i + \"\\nPlaylist: \");\n    console.log(this.playlist);\n    let l = Array.from(Array(this.playlist.length).keys());\n    this.shuffledList = l.sort(() => Math.random() - 0.5);\n    for (var x = 0; x < 10; x++) {\n      this.shuffledList = this.shuffledList.sort(() => Math.random() - 0.5);\n    }\n    console.log(\"Shuffle List: \" + this.shuffledList);\n    this.setState({\n      playlist: this.playlist,\n      shuffleList: this.shuffledList,\n      connected: \"Connected\"\n    });\n    setTimeout(() => {\n      this.setState({ firstloaded: \"none\" });\n    }, 10000);\n  }\n  async handleChange(event) {\n    if (event.target.value == \"8888\") {\n      this.getPlaylist();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.connected == \"Connected\" ? (\n          <div>\n            <div id=\"curtainCont\" style={{ display: this.state.firstloaded }}>\n              <div id=\"curtain1\">\n                <img\n                  id=\"r1\"\n                  src=\"https://jax-apps.com/images/r.svg\"\n                  width=\"56.43\"\n                  height=\"43\"\n                />\n              </div>\n              <div id=\"curtain2\">\n                <img\n                  id=\"r2\"\n                  src=\"https://jax-apps.com/images/r.svg\"\n                  width=\"56.43\"\n                  height=\"43\"\n                />\n              </div>\n            </div>\n            <div className=\"wheel_cont\"></div>\n            <div className=\"record_cont\"></div>\n            <div className=\"mainUI\">\n              <br />\n              <br />\n              <div id=\"needle\"></div>\n              <Slots\n                playlist={this.state.playlist}\n                shuffledList={this.state.shuffleList}\n              />\n            </div>\n          </div>\n        ) : (\n          <div id=\"loadScreen\">\n            <div\n              style={{\n                margin: \"auto\",\n                width: \"75px\",\n                visibility: this.state.loading ? \"visible\" : \"hidden\"\n              }}\n            >\n              <ReactLoading\n                type={\"spin\"}\n                color={\"#f0d26c\"}\n                height={75}\n                width={75}\n              />\n            </div>\n            <input\n              style={{ visibility: this.state.loading ? \"hidden\" : \"visible\" }}\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              onChange={this.handleChange.bind(this)}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n  async componentDidMount() {}\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}